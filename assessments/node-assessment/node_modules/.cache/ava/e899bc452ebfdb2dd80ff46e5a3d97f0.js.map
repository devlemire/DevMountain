{"version":3,"sources":["test.js"],"names":[],"mappings":"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","file":"test.js","sourcesContent":["import test from 'ava';\nimport request from 'supertest-as-promised';\nimport app from './server';\nimport Faker from 'faker';\nimport users from './users.json';\n\ntest('Get all users', async t=> {\n  t.plan(3)\n  const res = await request(app)\n    .get('/api/users')\n    .expect(200)\n\n  t.is(res.status, 200, 'Status is not 200');\n  t.deepEqual(res.body[0], users[0], \"No user returned\");\n  t.truthy(res.body, 'Something is wrong with the response body');\n})\n\ntest('Get user by language', async t => {\n  let req = await request(app)\n    .get('/api/users?language=klingon')\n    .expect(200)\n\n  t.truthy(req.body, 'Request body not found');\n\n  req.body.forEach(function(user) {\n    t.is(user.language, 'klingon')\n  })\n\n  req = await request(app)\n    .get('/api/users?language=french')\n    .expect(200)\n\n  t.truthy(req.body);\n\n  req.body.forEach(user => {\n    t.is(user.language, 'french');\n  })\n\n  req = await request(app)\n    .get('/api/users?language=foo')\n\n  t.is(req.status, 200);\n  t.falsy(req.body[0])\n})\n\ntest('Get user by privilege', async t => {\n  const req = await request(app)\n    .get('/api/users/admin')\n\n  t.plan(3+req.body.length);\n  t.is(req.status, 200);\n  t.truthy(req.body, 'Something is wrong with the request body');\n  t.truthy(req.body[0], 'No results returned');\n\n  req.body.forEach(user => {\n    t.is(user.type, 'admin')\n  });\n})\n\ntest('Create new user', async t => {\n  let colLength = users.length;\n  let newUser = fakeUser();\n  const req = await request(app)\n    .post('/api/users')\n    .send(newUser)\n\n  t.is(req.status, 200, 'Make sure you are using bodyParser');\n})\n\ntest('Create a new admin user', async t => {\n  let newUser = fakeUser();\n  const req = await request(app)\n    .post('/api/users/admin')\n    .send(newUser)\n\n  t.is(req.status, 200)\n})\n\ntest('Change a users language', async t => {\n  let newUser = fakeUser();\n  let id;\n  let req = await request(app)\n    .post('/api/users')\n    .send(newUser)\n\n  t.is(req.status, 200);\n  t.truthy(req.body.id);\n  console.log(\"req: \", req.body);\n  id = req.body.id;\n\n  req = await request(app)\n    .post('/api/users/language/' + id)\n    .send({language: 'french'})\n\n  t.is(req.status, 200, 'error changing language');\n\n  req = await request(app)\n    .get('/api/users/' + id)\n\n  t.is(req.status, 200);\n  t.truthy(req.body.language);\n  t.is(req.body.language, 'french');\n\n  req = await request(app)\n    .post('/api/users/language/' + id)\n    .send({language: 'klingon'})\n\n  t.is(req.status, 200, 'error changing language to Klingon')\n\n  req = await request(app)\n    .get('/api/users/' + id)\n\n  t.is(req.status, 200);\n  t.truthy(req.body.language);\n  t.is(req.body.language, 'klingon');\n})\n\ntest('add to a users favorite forums', async t => {\n  let newUser = fakeUser();\n  let id;\n\n  // CREATE A NEW USER\n  let res = await request(app)\n    .post('/api/users')\n    .send(newUser)\n\n  t.is(res.status, 200);\n  t.truthy(res.body.id);\n  id = res.body.id;\n\n  // ADD TO FAVORITE FORUMS\n  res = await request(app)\n    .post('/api/users/forums/' + id)\n    .send({add: 'foo'})\n\n  t.is(res.status, 200);\n\n  // CHECK IF USER HAS NEW FORUM\n  res = await request(app)\n    .get('/api/users/' + id)\n\n  t.is(res.status, 200);\n  t.is(true, Array.isArray(res.body.favorites))\n\n  t.is(\n    true,\n    res.body.favorites.reduce((a, b) => {\n      if (b === 'foo') return true;\n      else return false;\n    }, false)\n  )\n\n})\n\ntest('remove from a users favorite forums', async t => {\n  let newUser = fakeUser();\n  let id;\n\n  // CREATE NEW FORUM\n  let res = await request(app)\n    .post('/api/users')\n\n  t.is(res.status, 200);\n  t.truthy(res.body.id);\n  id = res.body.id;\n\n  // ADD TO USER FORUMS\n  res = await request(app)\n    .post('/api/users/forums/' + id)\n    .send('foo')\n\n  t.is(res.status, 200);\n\n  // Remove from user forums\n  res = await request(app)\n    .delete('/api/users/forums/' + id + '?favorite=foo')\n\n  t.is(res.status, 200);\n\n  // Check that forum has been deleted\n  res = await request(app)\n    .get('/api/users/' + id);\n\n  t.is(res.status, 200);\n  t.true(Array.isArray(res.body.favorites));\n\n  res.body.favorites.reduce((a,b) => {\n    return b !== 'foo';\n  }, false)\n})\n\ntest('ban(delete) a user', async t => {\n  let user = fakeUser();\n\n  // Create a new user\n  let res = await request(app)\n    .post('/api/users')\n    .send(user)\n\n  t.is(res.status, 200);\n  t.truthy(res.body.id);\n  user.id = res.body.id;\n\n  // Delete that user\n  res = await request(app)\n    .delete('/api/users/' + user.id)\n\n  t.is(res.status, 200);\n\n  // Make sure user does not exist\n  res = await request(app)\n    .get('/api/users/' + user.id)\n\n  t.is(res.status, 404, 'Make sure that when a user is not found that the server returns 404');\n  t.truthy(res.body);\n  t.falsy(res.body[0], 'User still exists, delete endpoint is not working');\n\n})\n\ntest('Use queries for get all users', async t => {\n  // age\n  let res = await request(app)\n    .get('/api/users?age=49')\n\n  t.is(res.status, 200);\n  t.truthy(res.body);\n  res.body.forEach(user => {\n    t.true(user.age == 49, 'Age query failed')\n  })\n\n  // Location\n  res = await request(app)\n    .get('/api/users?language=english')\n\n  t.is(res.status, 200);\n  t.truthy(res.body);\n  t.truthy(res.body[0], 'Nothing returned from language query');\n  res.body.forEach(user => {\n    t.true(user.language === 'english', 'Language query failed');\n  })\n\n  // City\n  res = await request(app)\n    .get('/api/users?city=scranton')\n\n  t.is(res.status, 200);\n  t.truthy(res.body);\n  t.truthy(res.body[0], 'Nothing returned from city query');\n\n  res.body.forEach(user => {\n    t.true(user.city == 'Scranton', 'City query failed')\n  })\n\n  // State\n  res = await request(app)\n    .get('/api/users?state=pennsylvania')\n\n  t.is(res.status, 200);\n  t.truthy(res.body);\n  t.truthy(res.body[0], 'Nothing returned from state query');\n\n  res.body.forEach(user => {\n    t.true(user.state == 'Pennsylvania', 'State query failed')\n  })\n\n  // Gender\n  res = await request(app)\n    .get('/api/users?gender=female')\n\n  t.is(res.status, 200);\n  t.truthy(res.body);\n  t.truthy(res.body[0], 'Nothing returned from gender query');\n\n  res.body.forEach(user => {\n    t.true(user.gender == 'Female');\n  })\n})\n\ntest('Update one user', async t => {\n  let user = fakeUser();\n\n  let res = await request(app)\n    .post('/api/users')\n\n  t.is(res.status, 200);\n  t.truthy(res.body.id);\n  user.id = res.body.id;\n\n  // Update user\n  res = await request(app)\n    .put('/api/users/' + user.id)\n    .send({\n      first_name: 'foo',\n      last_name: 'bar'\n    })\n\n  t.is(res.status, 200, 'Check that put endpoint exists');\n\n  // Check that update was successful\n  res = await request(app)\n    .get('/api/users/' + user.id)\n\n  t.is(res.status, 200);\n  t.truthy(res.body);\n  t.is(res.body.first_name, 'foo', 'User was not changed');\n  t.is(res.body.last_name, 'bar', 'User was not changed');\n\n})\n\n\n\n\n\n\nfunction fakeUser() {\n  let languages = ['english', 'french', 'spanish', 'klingon'];\n  let types = ['admin', 'moderator', 'user'];\n  let faves = ['cats', 'dogs', 'angular'];\n  function getRand(l) {\n    return Math.floor(Math.random() * l);\n  }\n  return {\n    first_name: Faker.name.firstName(),\n    last_name: Faker.name.lastName(),\n    email: Faker.internet.email(),\n    gender: Math.random() >= .5 ? \"Male\" : \"Female\",\n    language: languages[getRand(languages.length)],\n    age: Math.floor(Math.random() * 70) + 20,\n    city: Faker.address.city(),\n    state: Faker.address.state(),\n    type: types[getRand(types.length)],\n    favorites: faves[getRand(faves.length)]\n  }\n}\n"]}